stages:
  - build-dev
  - deploy-dev
  - deploy-prod

variables:
  CI_REGISTRY: harbor.fliji.xyz
  CI_REGISTRY_IMAGE: $CI_REGISTRY/fliji/sockets

build-dev:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  stage: build-dev
  script:
    - COMMIT_HASH_SHORT=$(echo $CI_COMMIT_SHA | cut -c 1-7)
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache=true
      --cache-ttl=168h
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-dev:
  stage: deploy-dev
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$DEV_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo 'StrictHostKeyChecking=accept-new' > ~/.ssh/config

  script:
    - rsync -avz --delete docs/_build/ $DEV_SSH_HOST:caddy/socketdocs
    - ssh $DEV_SSH_HOST "bash deploy.sh newsocket"

  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-prod:
  stage: deploy-prod
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$PROD_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo 'StrictHostKeyChecking=accept-new' > ~/.ssh/config

  script:
    - ssh $PROD_SSH_HOST "bash deploy.sh newsocket"

  rules:
    - if: $CI_COMMIT_TAG
